package cn.sijay.${module}.entity;

import cn.sijay.common.web.base.BaseEntity;
import com.baomidou.mybatisplus.annotation.TableField;
import com.baomidou.mybatisplus.annotation.TableName;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.Size;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.experimental.Accessors;

#foreach ($import in $imports)
import ${import};
#end

import java.io.Serial;
import java.io.Serializable;

/**
* <p>
    * <em>${className} ${comment}</em>
    * </p>
*
* @author ${author}
* @since ${createTime}
*/
@Data
#if(${superClass})
@ToString(callSuper = true)
@EqualsAndHashCode(callSuper = true)
#end
@Accessors(chain = true)
@TableName("${tableName}")
@Schema(name = "${className}", title = "${comment}", description = "${comment}")
#if(${superClass})
public class ${className} extends ${superClassName} {
#else
public class ${className} implements Serializable {

@Serial
private static final long serialVersionUID = 1L;
#end

#set($excelSort=0)
#foreach($field in $fields)
    #if(!$field.getBoolSuperColumn())
    /**
    * ${field.columnComment}
    */
    @Schema(title = "${field.columnComment}")
        #if($field.getBoolExcelColumn())
        @ExcelProperty(value = "${field.columnComment}", sort = $excelSort)
            #set($excelSort=$excelSort+1)
        #end
        #if($field.getBoolQueryable())
        @QueryColumn(QueryType.${field.queryType})
        #end
        #if($field.javaType.getClassName() == 'String')
        @Size(max = $field.length, message = "字段[${field.columnComment}]最大长度为{max}")
        #end
        #if($field.getBoolPrimaryKey())
        @TableId(value = "${field.columnName}", type = IdType.AUTO)
        #else
        @TableField("${field.columnName}")
        #end
    private ${field.javaType.getClassName()} ${field.fieldName};

    #end
#end
#foreach($field in $fields)
    #if($field.getBoolQueryable())
        #if($field.queryType.getCode() == 'BT')
        @TableField(exist = false)
        private ${field.javaType.getClassName()} ${field.fieldName}Start;

        @TableField(exist = false)
        private ${field.javaType.getClassName()} ${field.fieldName}End;

        #end
    #end
#end
}
